---
title: Lecture XXXX - Note    # e.g., Lecture 10 - Note
subtitle: SOME TOPICS  # e.g., Aesthetic Mappings; Facets; Geometric Objects 
author: 
  - name: YOUR NAME   # e.g., Byeong-Hak Choe
date: last-modified   # e.g., 2024-05-07

execute: 
  echo: true        # true false
  eval: true        # true false
  warning: false    # true false
  message: false    # true false
  fig-width: 9
  # fig-height: 5
  
format: 
  html:
    toc: true                # true false
    number-sections: true    # true false
    code-fold: false         # true false show   # https://quarto.org/docs/output-formats/html-code.html
    code-tools: true         # true false
    highlight-style: a11y          # a11y arrow ayu atom-one breeze github gruvbox tango espresso
                                   # pygments tango espresso espresso zenburn kate nord
                                   # https://quarto.org/docs/output-formats/html-code.html#highlighting
---


```{r setup}
#| include: false
library(tidyverse)
library(skimr)
library(hrbrthemes)
library(DT)
library(rmarkdown)

```

#Class 25 - 5/7/24
##Lecture 20 cont.
```{r}
nyc_dogs <- read_csv('https://bcdanl.github.io/data/nyc_dogs_cleaned.csv')
flights <- nycflights13::flights
```

#Grouped Process
```{r}
df <- data.frame(
  grade = c("A", "A", "B", "B", "C"),
  score = c(100, 96, 85, 83, 76))

df_filter <- df |> 
  group_by(grade) |> 
  filter(n() < 2)
```

#Group Operations

Q. Use filter() to create the data.frame not_cancelled that includes all observations in flights except for those with cancelled flights.

```{r}
not_cancelled <- flights |> 
  filter(!(is.na(dep_delay) | is.na(arr_delay)))
```

Q. Describe the distribution of a planeâ€™s average arrival delay. - Airplanes are identified by their tail number (tailnum)

```{r}
by_tailnum <- not_cancelled |> 
  group_by(tailnum) |> 
  summarise(mean_delay = mean(dep_delay, na.rm = T))
```

```{r}
ggplot(by_tailnum, aes(x = mean_delay)) + 
  geom_histogram(bins = 100)
```

Q. How long is the longest average arrival delay?

```{r}
by_tailnum <- by_tailnum |> 
  arrange(-mean_delay)
```

```{r}
by_dest <- not_cancelled |> 
  group_by(dest) |> 
  summarise(n = n(),
            dist = mean(distance, na.rm = T),
            delay = mean(arr_delay, na.rm = T))
```

```{r}
ggplot(by_dest, aes(x = dist, y = delay)) +
  geom_point(alpha = .4) + 
  geom_smooth()
```

```{r}
by_dest2 <- by_dest |> 
  filter(dist <= 3000)

ggplot(by_dest2, aes(x = dist, y = delay)) +
  geom_point(alpha = .4) + 
  geom_smooth()
```

```{r}
by_dest3 <- by_dest |> 
  filter(dist <= 3000, delay > 0)

ggplot(by_dest3, aes(x = dist, y = delay)) +
  geom_point(alpha = .4) + 
  geom_smooth()
```

```{r}
by_dest3 <- by_dest |> 
  filter(dist <= 3000, n > 500)

ggplot(by_dest3, aes(x = dist, y = delay)) +
  geom_point(alpha = .4, aes(size = n)) + 
  geom_smooth()
```

Q. Calculate the average arrival delay for each date.
Q. Given that the arrival delay is positive, calculate the average arrival delay for each date.

```{r}
by_day <- not_cancelled |> 
  group_by(year, month, day) |> 
  summarize(avg_delay = mean(arr_delay, na.rm = T),
            avg_delay_pos = mean(arr_delay[arr_delay >0], na.rm = T),
            )
```

```{r}
by_dest_sd <- not_cancelled |> 
  group_by(dest) |> 
  summarize(dist_sd = sd(distance)) |> 
  arrange(desc(dist_sd))
```

Q. When do the first and last flights leave each day?

```{r}
first_last <- not_cancelled |> 
  group_by(year, month, day) |> 
  summarize(first = min(dep_time, na.rm = T),
            last = max(dep_time, na.rm = T)
            )
```

#Classwork 12
```{r}
nyc_housing_sales <- read_csv('https://bcdanl.github.io/data/nyc_housing_sales_2006-2023.csv')
beer_markets <- read_csv('https://bcdanl.github.io/data/beer_markets_all.csv')
```

##Part 1
Q1. Use skimr::skim() to get summary statistics (e.g, mean, standard deviation, median, minimum, maximum) about the price for one bottle of beer (12 oz) for each brand when there was promo and when there was not.

```{r}
beer_markets_albany <- 
```
















